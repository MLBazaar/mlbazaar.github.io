{
    "_id": "50119d4e-bab9-4f3c-aa01-632cae9934ba",
    "primitives": [
        "networkx.link_prediction_feature_extraction",
        "networkx.graph_feature_extraction",
        "mlprimitives.feature_extraction.CategoricalEncoder",
        "sklearn.preprocessing.Imputer",
        "sklearn.preprocessing.StandardScaler",
        "sklearn.ensemble.RandomForestClassifier"
    ],
    "init_params": {},
    "input_names": {},
    "output_names": {},
    "hyperparameters": {
        "networkx.link_prediction_feature_extraction#1": {
            "functions": [
                "networkx.jaccard_coefficient",
                "networkx.resource_allocation_index",
                "networkx.adamic_adar_index",
                "networkx.preferential_attachment"
            ]
        },
        "networkx.graph_feature_extraction#1": {
            "functions": [
                "networkx.degree_centrality",
                "networkx.closeness_centrality",
                "networkx.betweenness_centrality",
                "networkx.clustering"
            ]
        },
        "mlprimitives.feature_extraction.CategoricalEncoder#1": {
            "copy": true,
            "features": "auto",
            "max_labels": 12
        },
        "sklearn.preprocessing.Imputer#1": {
            "missing_values": "NaN",
            "axis": 0,
            "copy": true,
            "strategy": "most_frequent"
        },
        "sklearn.preprocessing.StandardScaler#1": {
            "with_mean": true,
            "with_std": false
        },
        "sklearn.ensemble.RandomForestClassifier#1": {
            "n_jobs": -1,
            "criterion": "entropy",
            "max_features": "log2",
            "max_depth": 8,
            "min_samples_split": 0.22063388540915838,
            "min_samples_leaf": 0.4459860468601945,
            "n_estimators": 22,
            "class_weight": "balanced"
        }
    },
    "tunable_hyperparameters": {
        "networkx.link_prediction_feature_extraction#1": {},
        "networkx.graph_feature_extraction#1": {},
        "mlprimitives.feature_extraction.CategoricalEncoder#1": {
            "max_labels": {
                "type": "int",
                "default": 0,
                "range": [
                    0,
                    100
                ]
            }
        },
        "sklearn.preprocessing.Imputer#1": {
            "strategy": {
                "type": "str",
                "default": "mean",
                "values": [
                    "mean",
                    "median",
                    "most_frequent"
                ]
            }
        },
        "sklearn.preprocessing.StandardScaler#1": {
            "with_mean": {
                "type": "bool",
                "default": true
            },
            "with_std": {
                "type": "bool",
                "default": true
            }
        },
        "sklearn.ensemble.RandomForestClassifier#1": {
            "criterion": {
                "type": "str",
                "default": "entropy",
                "values": [
                    "entropy",
                    "gini"
                ]
            },
            "max_features": {
                "type": "str",
                "default": null,
                "range": [
                    null,
                    "auto",
                    "log2"
                ]
            },
            "max_depth": {
                "type": "int",
                "default": 10,
                "range": [
                    1,
                    30
                ]
            },
            "min_samples_split": {
                "type": "float",
                "default": 0.1,
                "range": [
                    0.0001,
                    0.5
                ]
            },
            "min_samples_leaf": {
                "type": "float",
                "default": 0.1,
                "range": [
                    0.0001,
                    0.5
                ]
            },
            "n_estimators": {
                "type": "int",
                "default": 30,
                "values": [
                    2,
                    500
                ]
            },
            "class_weight": {
                "type": "str",
                "default": null,
                "range": [
                    null,
                    "balanced"
                ]
            }
        }
    },
    "name": "graph/graph_matching/random_forest_classifier",
    "template": "5bd9f2c149e71534685a9d9e",
    "id": "50119d4e-bab9-4f3c-aa01-632cae9934ba",
    "loader": {
        "data_modality": "graph",
        "task_type": "graph_matching"
    },
    "score": 0.9,
    "rank": 0.10000000000027594,
    "metric": "accuracy",
    "ts": "2018-10-31T19:36:33.840000",
    "dataset": "LL1_SAMPSON_net_dataset_TRAIN",
    "tuner_type": "gp",
    "test_id": "20181031182406178134"
}